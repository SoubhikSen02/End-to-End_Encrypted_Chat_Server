/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.e2e.chatServer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

/**
 *
 * @author Soubhik
 */
public class SettingsDialog extends javax.swing.JDialog {

    /**
     * Creates new form SettingsDialog
     */
    public SettingsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        advancedSettingsToggleButton.setSelected(true);
        settingsDisplayScrollPanel.getViewport().setView(new AdvancedSettingsPanel(this));

        saveButton.setEnabled(false);
        resetButton.setEnabled(false);
        if(((AdvancedSettingsPanel)settingsDisplayScrollPanel.getViewport().getView()).getClientTimeoutText().equals("300") && ((AdvancedSettingsPanel)settingsDisplayScrollPanel.getViewport().getView()).getServerPortText().equals("3737"))
        {
            resetToDefaultButton.setEnabled(false);
        }

        setTitle("Settings");
        setLocationRelativeTo(parent);
        setVisible(true);
    }

    private SettingsDialog getSelfReference()
    {
        return this;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        differentSettingsButtonsGroupButton = new javax.swing.ButtonGroup();
        settingsGroupButtonsPanel = new javax.swing.JPanel();
        advancedSettingsToggleButton = new javax.swing.JToggleButton();
        settingsControlButtonsPanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        resetToDefaultButton = new javax.swing.JButton();
        settingsDisplayScrollPanel = new javax.swing.JScrollPane();

        setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                if(saveButton.isEnabled())
                {
                    int response = JOptionPane.showConfirmDialog(getSelfReference(), "Some changes have not been saved.\nDo you want to discard the changes?", "Discard changes", JOptionPane.YES_NO_OPTION);
                    if(!(response == JOptionPane.YES_OPTION))
                    {
                        return;
                    }
                }
                dispose();
            }
        });

        settingsGroupButtonsPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        advancedSettingsToggleButton.setText("Advanced");
        advancedSettingsToggleButton.setFocusPainted(false);
        advancedSettingsToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advancedSettingsToggleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout settingsGroupButtonsPanelLayout = new javax.swing.GroupLayout(settingsGroupButtonsPanel);
        settingsGroupButtonsPanel.setLayout(settingsGroupButtonsPanelLayout);
        settingsGroupButtonsPanelLayout.setHorizontalGroup(
                settingsGroupButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(advancedSettingsToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
        );
        settingsGroupButtonsPanelLayout.setVerticalGroup(
                settingsGroupButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(settingsGroupButtonsPanelLayout.createSequentialGroup()
                                .addComponent(advancedSettingsToggleButton)
                                .addGap(0, 279, Short.MAX_VALUE))
        );

        settingsControlButtonsPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        saveButton.setText("Save");
        saveButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                saveButtonClicked();
            }
        });

        resetButton.setText("Reset");
        resetButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                resetButtonClicked();
            }
        });

        resetToDefaultButton.setText("Reset To Default");
        resetToDefaultButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                resetToDefaultButtonClicked();
            }
        });

        javax.swing.GroupLayout settingsControlButtonsPanelLayout = new javax.swing.GroupLayout(settingsControlButtonsPanel);
        settingsControlButtonsPanel.setLayout(settingsControlButtonsPanelLayout);
        settingsControlButtonsPanelLayout.setHorizontalGroup(
                settingsControlButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsControlButtonsPanelLayout.createSequentialGroup()
                                .addContainerGap(219, Short.MAX_VALUE)
                                .addComponent(resetToDefaultButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(resetButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(saveButton)
                                .addContainerGap())
        );
        settingsControlButtonsPanelLayout.setVerticalGroup(
                settingsControlButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(settingsControlButtonsPanelLayout.createSequentialGroup()
                                .addGroup(settingsControlButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(saveButton)
                                        .addComponent(resetButton)
                                        .addComponent(resetToDefaultButton))
                                .addGap(0, 0, Short.MAX_VALUE))
        );

        settingsDisplayScrollPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(settingsGroupButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(settingsDisplayScrollPanel))
                        .addComponent(settingsControlButtonsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(settingsGroupButtonsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(settingsDisplayScrollPanel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(settingsControlButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        differentSettingsButtonsGroupButton.add(advancedSettingsToggleButton);
        //advancedSettingsToggleButton.doClick();

        pack();
    }// </editor-fold>

    private void advancedSettingsToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if(settingsDisplayScrollPanel.getViewport().getView() instanceof AdvancedSettingsPanel)
        {
            return;
        }

        settingsDisplayScrollPanel.getViewport().setView(new AdvancedSettingsPanel(this));

        resetButton.setEnabled(false);
        saveButton.setEnabled(false);
        if(((AdvancedSettingsPanel)settingsDisplayScrollPanel.getViewport().getView()).getClientTimeoutText().equals("300") && ((AdvancedSettingsPanel)settingsDisplayScrollPanel.getViewport().getView()).getServerPortText().equals("3737"))
        {
            resetToDefaultButton.setEnabled(false);
        }
        else {
            resetToDefaultButton.setEnabled(true);
        }
    }

    public void advancedSettingsPanelFieldsUpdated()
    {
        AdvancedSettingsPanel advancedSettingsPanel = (AdvancedSettingsPanel) settingsDisplayScrollPanel.getViewport().getView();
        if(!advancedSettingsPanel.getServerPortText().equals(ConfigManager.getServerPort()) || !advancedSettingsPanel.getClientTimeoutText().equals(ConfigManager.getClientTimeoutInSeconds()))
        {
            saveButton.setEnabled(true);
            resetButton.setEnabled(true);
        }
        else
        {
            saveButton.setEnabled(false);
            resetButton.setEnabled(false);
        }
        if(!advancedSettingsPanel.getServerPortText().equals("3737") || !advancedSettingsPanel.getClientTimeoutText().equals("300"))
        {
            resetToDefaultButton.setEnabled(true);
        }
        else
        {
            resetToDefaultButton.setEnabled(false);
        }
    }

    private void resetButtonClicked()
    {
        AdvancedSettingsPanel advancedSettingsPanel = (AdvancedSettingsPanel) settingsDisplayScrollPanel.getViewport().getView();
        advancedSettingsPanel.setServerPortText(ConfigManager.getServerPort());
        advancedSettingsPanel.setClientTimeoutText(ConfigManager.getClientTimeoutInSeconds());
        advancedSettingsPanelFieldsUpdated();
    }

    private void resetToDefaultButtonClicked()
    {
        int response = JOptionPane.showConfirmDialog(this, "Do you want to reset settings to default?", "Reset to default", JOptionPane.YES_NO_OPTION);
        if(!(response == JOptionPane.YES_OPTION))
        {
            return;
        }

        AdvancedSettingsPanel advancedSettingsPanel = (AdvancedSettingsPanel) settingsDisplayScrollPanel.getViewport().getView();
        advancedSettingsPanel.setServerPortText("3737");
        advancedSettingsPanel.setClientTimeoutText("300");
        saveButtonClicked();
    }

    private void saveButtonClicked()
    {
        AdvancedSettingsPanel advancedSettingsPanel = (AdvancedSettingsPanel) settingsDisplayScrollPanel.getViewport().getView();
        ConfigManager.setServerPort(advancedSettingsPanel.getServerPortText());
        ConfigManager.setClientTimeoutInSeconds(advancedSettingsPanel.getClientTimeoutText());
        advancedSettingsPanelFieldsUpdated();
    }

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(SettingsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(SettingsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(SettingsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(SettingsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                SettingsDialog dialog = new SettingsDialog(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify
    private javax.swing.JToggleButton advancedSettingsToggleButton;
    private javax.swing.ButtonGroup differentSettingsButtonsGroupButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton resetToDefaultButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JPanel settingsControlButtonsPanel;
    private javax.swing.JScrollPane settingsDisplayScrollPanel;
    private javax.swing.JPanel settingsGroupButtonsPanel;
    // End of variables declaration
}
